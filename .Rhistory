library(ggplot2)
install.packages(ggplot2)
install.packages(ggplot2)
install.packages(ggplot)
install.packages("ggplot2")
library(spatial, lib.loc = "C:/Program Files/R/R-4.1.2/library")
library(splines, lib.loc = "C:/Program Files/R/R-4.1.2/library")
library(tibble)
library(scales)
library(ggplot2)
library(labeling)
library(isoband)
if (!require(devtools)) {install.packages("devtools")}
devtools::install_github("brooke-watson/BRRR")
install.packages("RCurl")
library(RCurl)
df<- read.csv("https://docs.google.com/spreadsheets/d/e/2PACX−1vS0wAfZt28−tqhdxEX4EartljewLmOKpa0XCvDFgqK")
summary(df)
df<- read.csv("c://Users/lynes/Desktop/MSc EAGLE/Introduction to Programming and Geostatistics/Eagle R/Eagle R/Abooso Huni Valley GSH 20m.csv")
summary(df)
df1 <- data.frame(df[,a(4:10,15,21)],height=1)
df1 <- data.frame(df[,c(4:10,15,21)],height=1)
df1 <- data.frame(df[,c(1,2,3)])
View(df1)
View(df1)
View(df)
View(df)
View(df1)
View(df1)
library(ggplot2)
library(gganimate)
install.packages("gganaimate")
library(gganimate)
install.packages("gganimate")
library(gganimate)
install.packages("gifski")
install.packages("av")
library(gganimate)
library(ggplot2)
library(gganimate)
df<- read.csv("c://Users/lynes/Desktop/MSc EAGLE/Introduction to Programming and Geostatistics/Eagle R/Eagle R/Abooso Huni Valley GSH 20m.csv")
View(df)
p<-ggplot(df, aes(y=northing, x=easting, color=randu, size=height)) + geom_point(alpha=0.8)
p
p<-ggplot(df, aes(y=northing, x=easting, color=randu, size=height)) + geom_point(alpha=0.8)
p<-ggplot(df, aes(y=northing, x=easting, color=blue, size=height)) + geom_point(alpha=0.8)
View(df1)
View(df1)
View(p)
View(p)
mdf<-read.csv("c://Users/lynes/Desktop/MSc EAGLE/Introduction to Programming and Geostatistics/EAGLE_course_ggplot - Form responses 1.csv")
View(mdf)
View(mdf)
mdf1<-data.frame(df[,c(2:6,10,14)], semester=1, course=11)
mdf1<-data.frame(mdf[,c(2:6,10,14)], semester=1, course=11)
mdf2<-data.frame(mdf[,c(2:5,7,11,15)], semester=2, course=15)
mdf1<-data.frame(mdf[,c(2:5,8,12,16)], semester=3, course=2)
mdf1<-data.frame(mdf[,c(2:5,8,12,16)], semester=3, course=2)
mdf1<-data.frame(mdf[,c(2:6,10,14)], semester=1, course=11)
mdf2<-data.frame(mdf[,c(2:5,7,11,15)], semester=2, course=15)
mdf3<-data.frame(mdf[,c(2:5,8,12,16)], semester=3, course=2)
mdf4<-data.frame(mdf[,c(2:5,9,13,17)], semester=4, course=3)
mdf<- c("eyecol" , "haircol" , "glasses" , "sex" , "eoExp" , "progExp" , "praesExp" , "semester" , "courses")
mdf.names<- c("eyecol" , "haircol" , "glasses" , "sex" , "eoExp" , "progExp" , "praesExp" , "semester" , "courses")
mdf<-read.csv("c://Users/lynes/Desktop/MSc EAGLE/Introduction to Programming and Geostatistics/EAGLE_course_ggplot - Form responses 1.csv")
names(mdf1)<-mdf.names
names(mdf2)<-mdf.names
names(mdf3)<-mdf.names
names(mdf4)<-mdf.names
df<-rbind(mdf1, mdf2, mdf3, mdf4)
mdf<-rbind(mdf1, mdf2, mdf3, mdf4)
#
p<-ggplot(data = mdf, aes(y=eoExp, x=progExp, color=eyecol, size=sex))+geom_point(alpha=0.8)
View(p)
View(p)
View(p)
#
b<-ggplot(data = mdf, aes(y=eoExp, x=progExp, color=eyecol, size=sex))+geom_point(alpha=0.8)
View(b)
View(b)
#
b<-ggplot(data = mdf, aes(y=eoExp, x=progExp, color=eyecol, size=sex))+geom_point(alpha=0.8)
#
b<-ggplot(data=mdf, aes(y=eoExp, x=progExp, color=eyecol, size=sex))+geom_point(alpha=0.8)
#
b<-ggplot(data=mdf, aes(y=eoExp, x=progExp, color=eyecol, size=sex))+ geom_point(alpha=0.8)
b
b + transition_time(semester)+ease_aes("linear")
b + transition_time(semester)+ease_aes("linear")+
shadow_wake(wake_length =0.1, alpha = FALSE)+
enter_fade()+
exit_fade()
anim_save("eagle_EO_vs_prog_experiences.gif")
library(ggplot2)
library(rworldmap)
install.packages("rworldmap")
library(rworldmap)
install.packages("sp")
install.packages("sp")
install.packages("rworldmap")
install.packages("sp")
library(ggplot2)
library(rworldmap)
vignette("rworldmap")
world<- getMap()
world
View(world)
class(world)
plot(world)
gha<- world[world$name]=="Ghana" ,]
gha<- world[world$name]=="Ghana"]
gha<- world[world$name]=="Ghana" ]
gha<- world[world$name]=="Germany" ]
gha <- world[world$name]=="Germany" ]
ger <- world[world$name]=="Germany" ,]
world<- getMap()
ger <- world[world$name=="Germany" ,]
gha <- world[world$name=="Ghana" ,]
plot(gha)
plot(ger)
gha
ger
ggplot()+ geom_polygon(data= gha, aes(x= long, y= lat, group = region, fill = value), colour = "black", size= 0.1)+
coord_map(xlim = c(-13,35), ylim = c(32, 71))
ggplot()+ geom_polygon(data= ger, aes(x= long, y= lat, group = region, fill = value), colour = "black", size= 0.1)+
coord_map(xlim = c(-13,35), ylim = c(32, 71))
ggplot()+ geom_polygon(data= ger, aes(x=long, y=lat, group = region, fill = value), colour = "black", size= 0.1)+
coord_map(xlim = c(-13,35), ylim = c(32, 71))
ggplot()+ geom_polygon(data= germany, aes(x=long, y=lat, group = region, fill = value), colour = "black", size= 0.1)+
coord_map(xlim = c(-13,35), ylim = c(32, 71))
#
install.packages("sf")
library(sf)
library(maps)
usa=st_as_sf(map("usa" , plot = FALSE, fill = TRUE))
ggplot()+ geom_sf(data= usa)
ggplot()+ geom_sf(data= usa)
usa=st_as_sf(map("usa" , plot = FALSE, fill = FALSE))
ggplot()+ geom_sf(data= usa)
usa=st_as_sf(map("usa" , plot = FALSE, fill = TRUE))
laea =st_crs("+proj=laea +lat_0=30 + lon_0=-95")
usa<-st_transform(usa, laea)
ggplot()+ geom_sf(data= usa)
####
install.packages(c("cowplot" , "googleway", "ggplot2", "ggrepel", "ggspatial","libwgeom", "sf","rnaturalearth", "rnaturalearthdata"))
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel", "ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel", "ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel", "ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel", "ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel", "ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel", "ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel", "ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel", "ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel", "ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel", "ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel", "ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
library(raster)
install.packages("raster")
library("sf")
library("mapsf")
library("eurostat")
library("rnaturalearth")
install.packages("eurostat")
library(eurostat)
nuts2016 <- get_eurostat_geospatial(
output_class = "sf",
resolution = "20",
nuts_level = "all",
year = "2016"
)
View(nuts2016)
View(nuts2016)
nuts2016_3 <- nuts2016[nuts2016$LEVL_CODE == 3, ]
nuts2016_2 <- nuts2016[nuts2016$LEVL_CODE == 2, ]
N2 <-
c("AT", "BE", "CH", "DE", "EL", "NL", "UK", "TR", "IE", "IS", "NO")
nuts <- rbind(nuts2016_2[nuts2016_2$CNTR_CODE %in% N2, ],
nuts2016_3[!nuts2016_3$CNTR_CODE %in% N2, ])
nuts <- nuts[nuts$CNTR_CODE != "UK", ]
nuts <- nuts[,c("id","NUTS_NAME","geometry")]
colnames(nuts) <- c("id","name","geometry")
nuts2013 <- get_eurostat_geospatial(
output_class = "sf",
resolution = "20",
nuts_level = "2",
year = "2013"
)
uk = nuts2013[nuts2013$CNTR_CODE == "UK",c("id","NUTS_NAME","geometry")]
colnames(uk) <- c("id","name","geometry")
nuts <- rbind(nuts, uk)
nuts <-
nuts[!nuts$id %in% c("FRY10", "FRY20", "FRY30", "FRY40", "FRY50"), ]
nuts <- nuts[nuts$id != "RS", ]
var <- "nama_10r_3gdp"
gdpinh <- get_eurostat(var, time_format = "num")
gdpinh <- subset(gdpinh, gdpinh$unit == "EUR_HAB")
gdpinh <- gdpinh[gdpinh$time == 2016,c("geo","values")]
colnames(gdpinh) <- c("id","GDPINH_2016")
missing <- read.csv("data/missing.csv")
gdpinh = rbind(gdpinh, missing)
gdpinh <- gdpinh[gdpinh$time == 2016,c("geo","values")]
topo <- read.csv(file.choose())
topo <- read.csv(file.choose())
topo
str(topo)
summary(topo)
summary(topo)
head(topo$height)
q()
getwd()
setwd("C:/Users/lynes/Desktop/RFinal Proj/")
#installing Packages
install.packages("basemaps")
install.packages("leaflet")
#calling Libraries
library(terra)
library(raster)
library(basemaps)
library(ggplot2)
library(OpenImageR)
library(ggspatial)
library(leaflet)
library(ggplot2)
#Loading Datasets
SNodes <- read.csv("GNSS_Survey_Sewer_Point.csv") #This is the coordinates of sewer nodes
SAttributes <- read.csv("Sewer_attributes.csv")   #This is the attribute file concerning the sewers
T1 <- brick("30cm Orthoimagery Tema.jpg")              #there are four tiles of the imagery of the AOI
T2 <- brick("30cm Orthoimagery Tema2.jpg")
T3 <- brick("30cm Orthoimagery Tema3.jpg")
T4 <- brick("30cm Orthoimagery Tema4.jpg")
TemaImage <- c(1:4)
list.files("C:/Users/lynes/Desktop/RFinal Proj")
container <- grep(list.files("C:/Users/lynes/Desktop/RFinal Proj/"), pattern = "*.jpg$")
Filenames <- paste0("C:/Users/lynes/Desktop/RFinal Proj/", container)
Filenames
container
###### for loop to load images
for(i in 1:length(Filenames)){
TemaImage(i) <- brick(Filenames)
}
plotRGB(TemaImage)
DEM <- raster("100cmDEM.tif")
plot(DEM)
#########
str(SNodes)
######### changing start point casing to upper
SNodes$Start_point<- casefold(SNodes$Start_point, upper = T)
SNodes
###### Visualizing SNodes
ggplot(SNodes, aes(x =Longitude, y= Latitude, fill = Elevation))+
geom_point()
####
SAttributes
str(SAttributes)
SAttributes$Start_point <- casefold(SAttributes$Start_point, upper = T)
tail(SAttributes, n = 100)
####
tail(SAttributes, n = 100)
library(dplyr)
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
SAttributes2 <- SAttributes %>% mutate(End_point = ifelse(End_point %in% "", Start_point, End_point))
library(tidyverse)
library(tidyr)
library(tidyverse)
library(rlang)
detach("package:tidyverse", unload = TRUE)
library(tidyverse)
detach("package:tidyverse", unload = TRUE)
library(tidyverse)
SAttributes2
SAttributes2 <- SAttributes %>%
mutate(End_point = ifelse(End_point %in% "", Start_point, End_point))
SAttributes <- SAttributes %>%
mutate(End_point = ifelse(End_point %in% "", Start_point, End_point))
SAttributes <- mutate(End_point = ifelse(End_point %in% "", Start_point, End_point))
SAttributes  %>%
mutate(End_point = ifelse(End_point %in% "", Start_point, End_point))
install.packages("tidyverse")
library(tidyverse)
install.packages(c("blob", "broom", "caret", "colorspace", "exactextractr", "fansi", "geometry", "gifski", "glue", "haven", "leafem", "magrittr", "maptools", "mapview", "parallelly", "rgdal", "rlang", "scales", "sp", "tibble", "uuid", "vctrs", "webshot"))
install.packages(c("blob", "broom", "caret", "colorspace", "exactextractr", "fansi", "geometry", "gifski", "glue", "haven", "leafem", "magrittr", "maptools", "mapview", "parallelly", "rgdal", "rlang", "scales", "sp", "tibble", "uuid", "vctrs", "webshot"))
library(tidyverse)
remove.packages(rlang)
remove.packages("rlang")
library(tidyverse)
install.packages("rlang")
install.packages("rlang")
sessionInfo()
library(tidyverse)
install.packages("C:/Users/lynes/Desktop/RFinal Proj/rlang_1.0.2.tar.gz", repos = NULL, type = "source")
library(tidyverse)
